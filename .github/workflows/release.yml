name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write # Required to create releases

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Extract version from tag
        id: get_version
        run: |
          $versionNumber = "${{ github.ref_name }}" -replace "^v", ""
          echo "VERSION_NUMBER=$versionNumber" >> $env:GITHUB_OUTPUT
          Write-Host "Version number: $versionNumber"

      - name: Update AssemblyInfo with version
        run: |
          $version = "${{ steps.get_version.outputs.VERSION_NUMBER }}"
          $assemblyInfoPath = "HttpStatus/Properties/AssemblyInfo.cs"
          $content = Get-Content $assemblyInfoPath -Raw
          $content = $content -replace '\[assembly: AssemblyVersion\(".*"\)\]', "[assembly: AssemblyVersion(`"$version.0`")]"
          $content = $content -replace '\[assembly: AssemblyFileVersion\(".*"\)\]', "[assembly: AssemblyFileVersion(`"$version.0`")]"
          $content = $content -replace '\[assembly: AssemblyInformationalVersion\(".*"\)\]', "[assembly: AssemblyInformationalVersion(`"$version.0`")]"
          Set-Content $assemblyInfoPath $content -Encoding UTF8
          Write-Host "Updated AssemblyInfo.cs with version $version.0"

      - name: Build using build.cmd
        run: |
          ./scripts/build.cmd

      - name: Verify .exe exists
        run: |
          if (-not (Test-Path "HttpStatus/bin/Release/HttpStatus.exe")) {
            Write-Error "HttpStatus.exe not found in build output!"
            exit 1
          }
          Write-Host "Build successful - HttpStatus.exe found"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get_version.outputs.VERSION }}
          files: HttpStatus/bin/Release/HttpStatus.exe
          draft: false
          prerelease: false
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
